<?xml version="1.0" encoding="utf-8" ?>
<system debug="false">
	<!-- ***********************************************************************************
		TOOLKIT SETTINGS
	************************************************************************************ -->
	<toolkit theme="gradient">
		<styles>
			<asset resource="themes/xpt/xpt.css" />
		</styles>
		<components>
			<numberStepper class="xpt.ui.custom.NumberStepper" />
			<triangle class="xpt.ui.custom.Triangle" />
			<line class="xpt.ui.custom.Line" />
			<lineScale class="xpt.ui.custom.LineScale" />
		</components>
	</toolkit>
	
	<timing manager="actuate">
	</timing>
	
	<stimuli>
		<!-- ***********************************************************************************
			BASIC STIMULI
		************************************************************************************ -->
        <box builder="xpt.stimuli.builders.basic.StimBox" />
		<button builder="xpt.stimuli.builders.basic.StimButton" />
		<input builder="xpt.stimuli.builders.basic.StimInputText" >
            <valid>notEmpty()</valid>
        </input>
		<numberStepper builder="xpt.stimuli.builders.basic.StimNumberStepper">
            <valid>notEmpty()</valid>
        </numberStepper>
		<lineScale builder="xpt.stimuli.builders.basic.StimLineScale">
            <valid>notEmpty()</valid>
        </lineScale>    
		<multipleChoice builder="xpt.stimuli.builders.basic.StimMultipleChoice">
            <valid>notEmpty()</valid>
        </multipleChoice>
		<comboBox builder="xpt.stimuli.builders.basic.StimComboBox">
            <valid>notEmpty()</valid>
        </comboBox>    
		<imageSequence builder="xpt.stimuli.builders.basic.StimImageSequence" />
		<progressBar builder="xpt.stimuli.builders.basic.StimProgressBar" />
		<image builder="xpt.stimuli.builders.basic.StimImage" />
		<text builder="xpt.stimuli.builders.basic.StimText" />
		
		<!-- ***********************************************************************************
			NON-VISUAL STIMULI
		************************************************************************************ -->
		<timer builder="xpt.stimuli.builders.nonvisual.StimTimer" />
		<shuffle builder="xpt.stimuli.builders.nonvisual.StimShuffle" />
		<drag builder="xpt.stimuli.builders.nonvisual.StimDrag">
            <valid>equals(groups(prop("groups")))</valid>
        </drag>    
        
		<!-- ***********************************************************************************
			LAYOUT STIMULI
		************************************************************************************ -->
		<hbox builder="xpt.stimuli.builders.layout.StimHBox" />
		
		
		<!-- ***********************************************************************************
			COMPOUND STIMULI
		************************************************************************************ -->
		<multiNumberStepper builder="xpt.stimuli.builders.compound.StimMultiNumberStepper" />
		
		<!-- ***********************************************************************************
			ALIAS STIMULI
		************************************************************************************ -->
		<age builder="xpt.stimuli.builders.compound.StimMultiNumberStepper">
            <id>age</id>
			<val>00</val>
            <valid>notEmpty() && numeric()</valid>
		</age>
		<sex builder="xpt.stimuli.builders.basic.StimMultipleChoice">
			<id>sex</id>
			<labels>Male,Female</labels>
			<icons>img/icons/user-nude.png,img/icons/user-nude-female.png</icons>
			<buttonWidth>50%</buttonWidth>
            <valid>Male,Female</valid>
		</sex>
		<origin builder="xpt.stimuli.builders.basic.StimComboBox">
            <id>origin</id>
			<text>Where are you from?</text>
			<data>data/countries.json</data>
            <valid>notEmpty() && notEquals("Where are you from?")</valid>
		</origin>
		<preloadProgress builder="xpt.stimuli.builders.basic.StimProgressBar">
			<onPreloadProgress>
				this.pos = e.current;
				this.max = e.total;
			</onPreloadProgress>
		</preloadProgress>
		<preloadReadyButton builder="xpt.stimuli.builders.basic.StimButton">
			<icon>img/icons/control.png</icon>
			<iconPosition>right</iconPosition>
			<text>Continue</text>
			<visible>false</visible>
			<onPreloadComplete>
				this.visible = true
			</onPreloadComplete>
			<action>
				Experiment.nextTrial()
			</action>
		</preloadReadyButton>
		<nextTrialButton builder="xpt.stimuli.builders.basic.StimButton">
			<text>Next</text>
			<action>
				Experiment.nextTrial()
			</action>
            <onTrailValid>
                if (System.invalidTrailBehaviour == "disable") {
                    this.disabled = false;
                } else if (System.invalidTrailBehaviour == "hide") {
                    this.visible = true;
                }
            </onTrailValid>
            <onTrailInvalid>
                if (System.invalidTrailBehaviour == "disable") {
                    this.disabled = true;
                } else if (System.invalidTrailBehaviour == "hide") {
                    this.visible = false;
                }
            </onTrailInvalid>
		</nextTrialButton>
		<previousTrialButton builder="xpt.stimuli.builders.basic.StimButton">
			<text>Previous</text>
			<action>
				Experiment.previousTrial()
			</action>
		</previousTrialButton>
		<text builder="xpt.stimuli.builders.basic.StimText">
			<verticalAlign>center</verticalAlign>
			<horizontalAlign>center</horizontalAlign>
		</text>
	
			
		<teststim builder="xpt.stimuli.builders.layout.StimHBox">
			<children>
				<button text="bob 1"></button>
				<button>
					<text>bob 2</text>
				</button>
				<button text='bob 3'></button>
			</children>
		</teststim>
	</stimuli>
</system>